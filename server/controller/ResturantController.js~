const Resturant = require('../models/ResturantModel');
const mongoose = require('mongoose');
const fs = require('fs');
exports.getAllCategory = (req, res, next)=>{
    Resturant.find()
    .select('firstName lastName guest checkIn _id')
    .exec()
    .then(result=>{
        console.log(result)
        const response = {
            count: result.length,
            category: result.map(result=>{
                return {
                    categoryName: result.categoryName,
                    categoryStatus: result.categoryStatus,
                    categoryIconName: result.categoryIconName,
                    categoryIconPath: result.categoryIconPath,
                    _id: result._id,
                    request: {
                        type: 'GET',
                        url: 'http://localhost:3000/cms/'+result._id
                    }
                }
            })
        }
             res.status(200).json({
                message: 'Handling GET request to /cms',
                result: response
            });
    })
    .catch(err=>{
        res.status(500).json({
            error: err
        })
    });

}

exports.addCategory = (req, res, next)=>{
  //console.log(req.file);
  //console.log(req.body);
  //console.log(req.userData);
  console.log(req.body.categoryName)
  Resturant.find({'categoryName':req.body.categoryName})
  .exec()
  .then(data=>{ 
    console.log(data)
    if(data.length){
      fs.unlink('./public/categoryImages/'+req.file.filename, function(err){
        if (err) throw err;
        return res.status(500).json({
            error: 'You have already added this category'
        });
      })
      
    }else{
      category = new Resturant({
        _id: new mongoose.Types.ObjectId(),
        categoryName: req.body.categoryName,
        categoryStatus: req.body.categoryStatus,
        categoryIconName: req.file.filename,
        categoryIconPath: "http://localhost:3000/categoryImages/"+req.file.filename
      })
      category.save()
      .then(function(result){
        console.log(result)
        res.status(201).json({
            message: "Handling POST request to /products",
            createdCategory: {
                categoryName: result.categoryName,
                categoryStatus: result.categoryStatus,
                categoryIconName: result.categoryIconName,
                categoryIconPath: result.categoryIconPath,
                _id: result._id
            }
        });
      }).catch(function(err){
          fs.unlink('./public/categoryImages/'+req.file.filename, function(err){
              if (err) throw err;
              return res.status(500).json({
                error: err
              });
          })
        
      })
    }
  })
  .catch(err=>{
      console.log(err)
      fs.unlink('./public/categoryImages/'+req.file.filename, function(err){
              if (err) throw err;
              return res.status(500).json({
                error: err
              });
          })
  })
}


exports.getSingleCategory = (req, res, next)=>{
  console.log(req.params.id)
  Resturant.findOne({_id: req.params.id}).select('firstName lastName guest checkIn _id')
  .exec()
  .then(result=>{
    if(result){
      console.log(result)
      return res.status(202).json({
          message: 'Handling GET request to /cms',
          result
      })
    }else{
      console.log('err');
    }
  })
  .catch(err=>{
    return res.status(402).json({
      error: "Please check your input and try again"
    })
  })
}

exports.updateCategory = async (req, res, next)=>{
  console.log(req.file)
  console.log(req.body)
  var categoryData =  await Category.findOne({_id: req.params.id})
  console.log(categoryData)
  if(req.file.filename){
    fs.unlink('./public/categoryImages/'+categoryData.categoryIconName, function (err){
        if (err) console.log(err);
        // if no error, file has been deleted successfully
        console.log('File deleted!');
    })
    req.body.categoryIconName = req.file.filename
    req.body.categoryIconPath = "http://localhost:3000/categoryImages/"+req.file.filename
  }
  console.log(req.body)
  Category.updateOne({_id: req.params.id}, {$set: req.body})
  .exec()
  .then(result=>{
    console.log(result)
    return res.status(200).json({
      message: 'Category Updated Successfully',
      result
    })
  })
  .catch(err=>{
     return res.status(402).json({
        error: "Please check your input and try again"
      })
  })
}

exports.deleteCategory = (req, res, next)=>{
    //const id = req.params.id;
    //console.log(id);
    Category.remove({_id: req.params.id})
    .exec()
    .then(result=>{
        res.status(200).json({
            message: 'Category Deleted Successfully',
        });
    })
    .catch(err=>{
        res.status(500).json({
            error: err
        });
    });
}
